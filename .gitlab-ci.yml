image: python:3.9.1-alpine3.12

stages:
  - lint
  - unit-test
  # - integration-test

pylint:
  stage: lint
  tags:
    - docker-gcc
  image: python:3.7-slim
  before_script:
    - pip install pylint_gitlab
  script:
    - pip install -r requirements.txt
    - pylint --exit-zero --output-format=text $(find ./src -type f -name "*.py") | tee /tmp/pylint.txt
    - pylint --exit-zero --output-format=pylint_gitlab.GitlabCodeClimateReporter $(find ./src -type f -name "*.py") > codeclimate.json
  artifacts:
    reports:
      codequality: codeclimate.json
    when: always

unit-test:
  stage: unit-test
  tags:
    - docker-gcc
  image: python:3.12.1-slim
  before_script:
    - sudo apt install build-essential
  script:
    - python3 -m venv .venv
    - . .venv/bin/activate
    - pip install -r requirements.txt
    - coverage run -m pytest --junitxml=junit.xml
  artifacts:
    reports:
      junit: junit.xml
    when: always

# integration-test:
#   stage: integration-test
#   tags:
#     - docker-gcc
#   image: python:3.7-slim
#   script:
#     - pip install -r requirements.txt
#     - pytest
#   artifacts:
#     reports:
#       codequality: codeclimate.json
#     when: always